service: aws-python-api-worker-project

frameworkVersion: '2'

package:
  patterns:
    - '!**'
    - 'handler.py'
    - 'collector.yaml'
    - 'requirements.txt'
    - 'otel-instrument.py'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: dev
  region: ${file(env.json):aws-region}
  environment:
    OPENTELEMETRY_COLLECTOR_CONFIG_FILE: /var/task/collector.yaml
    APM_SERVER_URL: ${file(env.json):apm-server-url}
    APM_SERVER_TOKEN: ${file(env.json):apm-server-token}

    # Not working - https://github.com/aws-observability/aws-otel-lambda/issues/109
    OTEL_PROPAGATORS: tracecontext
    # Replacing the OOB wrapper with the one setting the propagators explicitly
    # AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-instrument
    AWS_LAMBDA_EXEC_WRAPPER: /var/task/otel-instrument.py
    # End of fix for #109

    # Disable requests autoinstrumentation to perform all manual otel instrumentation
    # OTEL_PYTHON_DISABLED_INSTRUMENTATIONS: "requests"

functions:
  producer:
    handler: handler.producer
    layers:
      - arn:aws:lambda:${file(env.json):aws-region}:901920570463:layer:aws-otel-python38-ver-1-2-0:1
    environment:
      CONSUMER_API: https://#{ApiGatewayRestApi}.execute-api.#{AWS::Region}.amazonaws.com/${self:provider.stage}/consume         
    events:
      - http:
          method: post
          path: produce

  consumer:
    handler: handler.consumer
    layers:
      - arn:aws:lambda:${file(env.json):aws-region}:901920570463:layer:aws-otel-python38-ver-1-2-0:1    
    events:
      - http:
          method: get
          path: consume

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters